<%- include("partials/header") -%>

<div class="page-div">


  <div class="page-left">
    <div class="page-title">
    <h1>Create a New Route</h1>
    </div>


    <div class="new-route-box" id="map-container">



    <script>

      function findCenter(arrayOfCoords){
        var sumLat = 0;
        var sumLong = 0;

        arrayOfCoords.forEach(el => {
          sumLong += el[0];
          sumLat += el[1];
        })

        var avgLat = sumLat/(arrayOfCoords.length);
        var avgLong = sumLong/(arrayOfCoords.length);
        return [avgLong, avgLat];
      }

// This function takes as input an array of two arrays, where each inner array is long/lat pair
// The function returns the distance between the two points
      function calcDistance(twoPair){
        var r = 6371;
        var dLat = toRad(twoPair[1][1] - twoPair[0][1] );
        var dLon = toRad(twoPair[1][0] - twoPair[0][0] );
        var lat1 = toRad(twoPair[0][1]);
        var lat2 = toRad(twoPair[1][1]);

        var a = Math.sin(dLat/2) * Math.sin(dLat/2) +
          Math.sin(dLon/2) * Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);
          var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
          var d = r * c;
          return (d*0.6214);
      }

      function toRad(Value) {return Value * Math.PI / 180;}


      mapboxgl.accessToken = 'pk.eyJ1IjoicGRveWxlMjAxNCIsImEiOiJja2N5YmJ3cjQwM2hjMnVtcDhzbXpjcXpzIn0.LAbn5yWnO5F2qnDJaCnhcA';
      var map = new mapboxgl.Map({
        container: 'map-container',
        style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location
        center: [-87.654, 41.94], // starting position [lng, lat]
        zoom: 10 // starting zoom
      });


      var newRouteCoords = [];
      // Add a new marker on the map and save the long/lat coordinates in array newRouteCoords
      map.on('click', function(e) {
        var coordsString = `lng: ${e.lngLat.lat} <br> lng: ${e.lngLat.lng}`;
        // console.log(coords);

        newRouteCoords.push( [e.lngLat.lng, e.lngLat.lat]);

        console.log('The coordinate pairs that have been clicked on this map are: ')
        console.log(newRouteCoords)


        var submittedCoords = document.getElementById('gpsCoords')
        // var wpName = "\"wayPoints\"";
        // submittedCoords.name = wpName.replace(/\"/g, "")
        submittedCoords.name = 'wayPoints';
        submittedCoords.value = newRouteCoords;

        var avgCenter = document.getElementById('gpsCenter');
        avgCenter.name = 'center';
        avgCenter.value =  findCenter( newRouteCoords );


        // var dist = document.getElementById('distance');
        // dist.name = 'distance';
        // dist.value = JSON.stringify( )



        var popup = new mapboxgl.Popup().setText(coordsString);

        var el = document.createElement('div');
        el.id = 'marker';

        new mapboxgl.Marker(el)
          .setLngLat(e.lngLat)
          .setPopup(popup)
          .addTo(map);

        console.log(el);

        //if more than one point has been added, draw the route
        if (newRouteCoords.length > 1) {

          var totDistance = 0;
          for (k=0; k<newRouteCoords.length-1; k++){
            var twoPair = [newRouteCoords[k], newRouteCoords[k+1]]
            totDistance += calcDistance(twoPair)
          };

          document.getElementById('distance-disp').textContent = Math.round(totDistance*100)/100;
          var dist = document.getElementById('distance');
          dist.name = 'distance';
          dist.value =  Math.round(totDistance*100)/100 ;


          //if more than 2 points have been added and one line has already been drawn,
          //delete the first line to allow for a replacement
          if (newRouteCoords.length > 2) {
            map.removeLayer('route')
            map.removeSource('route');
          };

          map.addSource('route', {
            'type': 'geojson',
            'data': {
              'type': 'Feature',
              'properties': {},
              'geometry': {
                'type': 'LineString',
                'coordinates': newRouteCoords
              }
            }
          });
          map.addLayer({
            'id': 'route',
            'type': 'line',
            'source': 'route',
            'layout': {
              'line-join': 'round',
              'line-cap': 'round'
            },
            'paint': {
              'line-color': 'red',
              'line-width': 8
            }
          });

        }
      });
    </script>


    </div>
  </div>


  <div class="page-right">


    <div class="new-route-controls">
      <form class="new-route-form" action="/new-route" method="post">
        <label class="name-label" for="routeName">Route Name:</label>

        <input class="name-input" type="text" name="routeName" value="" autocomplete="off">
        <br>
        <p class="distance-label">Distance: </p><p class="distance-disp" id="distance-disp"></p><p class="distance-unit"> (mi) </p>
        <input type="hidden" id="gpsCoords">
        <input type="hidden" id="gpsCenter">
        <input type="hidden" id="distance">
         <br>
        <button type="submit" id="btn-save-route" class="btn btn-outline-primary btn-save-route btn-md">Save</button>
      </form>
    </div>
  </div>


</div>

<%- include("partials/footer") -%>
